###########################
#  Configuration
###########################

# use 256 term for pretty colors
set -g default-terminal "screen-256color"

# increase scroll-back history
set -g history-limit 50000

# use vim key bindings
setw -g mode-keys vi

# enable mouse
setw -g mouse on
set-option -g -q mouse on

# decrease command delay (increases vim responsiveness)
set -sg escape-time 0

# increase repeat time for repeatable commands
set -g repeat-time 1000

# start window index at 1
set -g base-index 1

# start pane index at 1
setw -g pane-base-index 1

# highlight window when it has new activity
setw -g monitor-activity on
set -g visual-activity on

# re-number windows when one is closed
set -g renumber-windows on

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# auto window rename
set-window-option -g automatic-rename

# set mouse on with prefix m
bind M \
    set -g mode-mouse on \;\
    set -g mouse-resize-pane on \;\
    set -g mouse-select-pane on \;\
    set -g mouse-select-window on \;\
    display 'Mouse: ON'
#
# set mouse off with prefix M
bind m \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

###########################
# Status Bar
###########################

# enable UTF-8 support in status bar
set -g status-utf8 on

# set refresh interval for status bar
set -g status-interval 1

# center the status bar
set -g status-justify centre

# show session, window, pane in left status bar
set -g status-left-length 40
set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a %l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'


###########################
# Colors
###########################

# color status bar
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# highlight current window
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#
# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# set color of active pane
set-option -g pane-border-fg green #base02
set-option -g pane-active-border-fg blue #base01
set-option -g pane-active-border-bg blue 
#
# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
#
# clock
set-window-option -g clock-mode-colour green #green

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange


###########################
# Key Bindings
###########################

# tmux prefix
unbind C-b
set -g prefix `
bind ` send-prefix

bind-key l last-window


# more settings to make copy-mode more vim-like
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

# synchronize all panes in a window
bind y setw synchronize-panes

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# create splits
bind -n C-M-h split-window -h
bind -n C-M-v split-window -v

# create splits
bind v split-window -h
bind h split-window -v

# create window
bind -n C-M-c new-window

###########################
# Plugins
###########################

# Tmux Resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Get tmux if not already present
if "test ! -d ~/.tmux/plugins/tpm" \
       "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# Initialize TMUX plugin manager 
       run '~/.tmux/plugins/tpm/tpm'
